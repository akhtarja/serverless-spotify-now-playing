org: akhtarja
app: spotify-now-playing
service: spotify-now-playing-auth

plugins:
  - AuthDeploymentPlugin
  - serverless-pseudo-parameters

custom:
  namespace: spotify-now-playing-${self:custom.stage}
  stage: ${opt:stage, self:provider.stage}
  config_path: "../app/js/config"

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  profile: spotify-now-playing-${self:custom.stage}
  stage: dev
  environment:
    SPOTIFY_CLIENT_ID: ${env:SPOTIFY_NOW_PLAYING_CLIENT_ID_${self:custom.stage}}
    SPOTIFY_CLIENT_SECRET: ${env:SPOTIFY_NOW_PLAYING_CLIENT_SECRET_${self:custom.stage}}
    SUCCESS_URL: ${env:SPOTIFY_NOW_PLAYING_SUCCESS_URL_${self:custom.stage}}
    ERROR_URL: ${env:SPOTIFY_NOW_PLAYING_ERROR_URL_${self:custom.stage}}
    AUTH_SCOPES: user-read-private user-read-email user-read-playback-state
    USERS_TABLE: ${self:custom.namespace}-users
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        arn:aws:dynamodb:*:*:table/${self:provider.environment.USERS_TABLE}

functions:
  redirect:
    name: ${self:custom.namespace}-redirect
    handler: handler.redirect
    onError: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:spotify-now-playing-dlq-${self:custom.stage}-dlq
    events:
      - http:
          path: redirect
          method: get

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
